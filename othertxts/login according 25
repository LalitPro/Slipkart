import React from "react";
import Button from "./Button";
import { useFormik } from "formik";
import * as Yup from "yup";

function Login() {
  function CallLoginApi(values) {
    console.log("CallLoginApi called", values.email, values.Password);
  }

  const schema = Yup.object().shape({
    email: Yup.string()
      .required("Email must required")
      .email("Email must be a valid email"),
    Password: Yup.string().required().min(8).max(16),
  });

  const {
    handleSubmit,
    values,
    handleChange,
    resetForm,
    errors,
    handleBlur,
    touched,
    isValid,
    dirty,
  } = useFormik({
    initialValues: { email: "", Password: "" },
    onSubmit: CallLoginApi,
    validationSchema: schema,
  });

  return (
    <div className="flex items-center justify-center w-full h-full bg-gray-100">
      <form
        onSubmit={handleSubmit}
        method="put"
        action="https://Codeyogi.io/save"
        className="flex flex-col p-5 bg-white rounded-md shadow-md w-96"
      >
        <div className="flex items-center justify-center gap-3">
          <img src="../images/favicon.png" alt="logo" className="w-8 mb-3" />
          <h1 className="self-center mb-4 text-2xl font-bold">
            Login To DripCart
          </h1>
        </div>
        <div>
          <label htmlFor="email-address" className="sr-only">
            Email
          </label>
          <input
            type="email"
            id="email-address"
            autoComplete="email"
            onChange={handleChange}
            onBlur={handleBlur}
            required
            name="email"
            value={values.email}
            className="relative block w-full p-4 text-gray-900 placeholder-gray-500 border border-gray-300 rounded-none appearance-none md:text-lg sm:text-sm focus:ring-indigo-500 focus:outline-none focus:border-indigo-500 focus:z-10 rounded-t-md"
            placeholder="Email Address"
          />
        </div>
        {touched.email && errors.email && (
          <div className="text-red-500">{errors.email}</div>
        )}
        <div>
          <label htmlFor="Password" className="sr-only">
            Password
          </label>
          <input
            type="password"
            id="myPassword"
            autoComplete="current-password"
            required
            name="Password"
            onChange={handleChange}
            onBlur={handleBlur}
            value={values.password}
            className="relative block w-full p-4 text-gray-900 placeholder-gray-500 border border-gray-300 rounded-none appearance-none md:text-lg sm:text-sm focus:ring-indigo-500 focus:outline-none focus:border-indigo-500 focus:z-10 rounded-b-md"
            placeholder="Password"
          />
        </div>
        {touched.Password && errors.Password && (
          <div className="text-red-500">{errors.Password}</div>
        )}
        <Button
          type="button"
          onClick={resetForm}
          className="self-end my-3 font-bold md:text-lg"
        >
          Reset
        </Button>
        <Button
          type="submit"
          className="self-end my-3 font-bold md:text-lg disabled:bg-red-400 "
          disabled={dirty}
        >
          Login
        </Button>
      </form>
    </div>
  );
}

export default Login;
